// #include "can.h"
// #include "librm.hpp"

// using rm::hal::Can;
// using namespace rm::device;
// using namespace rm::modules::algorithm;

#include <cstdint>
#define BOTTOM_MOTOR_SPEED 4000
#define MIDDLE_MOTOR_SPEED 2500
#define CIRCLE_LOAD_MOTOR_SPEED 2000
#define LOAD_MOTOR_SPEED   3000
#define PITCH_MOTOR_SPEED  3500
#define YAW_MOTOR_SPEED    2000


#define LEFT_BOTTOM_MOTOR_SPEED_PID_KP 6
#define LEFT_BOTTOM_MOTOR_SPEED_PID_KI  0.06
#define LEFT_BOTTOM_MOTOR_SPEED_PID_KD  0
#define RIGHT_BOTTOM_MOTOR_SPEED_PID_KP 6
#define RIGHT_BOTTOM_MOTOR_SPEED_PID_KI  0.06
#define RIGHT_BOTTOM_MOTOR_SPEED_PID_KD  0

#define LEFT_BOTTOM_MOTOR_ANGLE_PID_KP 10
#define LEFT_BOTTOM_MOTOR_ANGLE_PID_KI  0
#define LEFT_BOTTOM_MOTOR_ANGLE_PID_KD  0
#define RIGHT_BOTTOM_MOTOR_ANGLE_PID_KP 10
#define RIGHT_BOTTOM_MOTOR_ANGLE_PID_KI  0
#define RIGHT_BOTTOM_MOTOR_ANGLE_PID_KD  0

#define MIDDLE_MOTOR_SPEED_PID_KP 5
#define MIDDLE_MOTOR_SPEED_PID_KI 0.01
#define MIDDLE_MOTOR_SPEED_PID_KD 0

#define MIDDLE_MOTOR_ANGLE_PID_KP 5
#define MIDDLE_MOTOR_ANGLE_PID_KI 0
#define MIDDLE_MOTOR_ANGLE_PID_KD 0

#define LOAD_MOTOR_SPEED_PID_KP 2
#define LOAD_MOTOR_SPEED_PID_KI 0.01
#define LOAD_MOTOR_SPEED_PID_KD 0

#define LOAD_MOTOR_ANGLE_PID_KP 30
#define LOAD_MOTOR_ANGLE_PID_KI 0
#define LOAD_MOTOR_ANGLE_PID_KD 0

#define PITCH_MOTOR_SPEED_PID_KP 5//5
#define PITCH_MOTOR_SPEED_PID_KI 0.05//0.5
#define PITCH_MOTOR_SPEED_PID_KD 0

#define PITCH_MOTOR_ANGLE_PID_KP 30
#define PITCH_MOTOR_ANGLE_PID_KI 15
#define PITCH_MOTOR_ANGLE_PID_KD 0//0
                                                                                                                                                                          

#define YAW_MOTOR_SPEED_PID_KP 3
#define YAW_MOTOR_SPEED_PID_KI 0.1//2
#define YAW_MOTOR_SPEED_PID_KD 0//1

#define YAW_MOTOR_ANGLE_PID_KP 20
#define YAW_MOTOR_ANGLE_PID_KI 10
#define YAW_MOTOR_ANGLE_PID_KD 0//0


//最大输出
#define BOTTOM_MOTOR_SPEED_MAX_OUT 12000
#define BOTTOM_MOTOR_SPEED_MAX_IOUT 3000
#define BOTTOM_MOTOR_ANGLE_MAX_OUT  3000
#define BOTTOM_MOTOR_ANGLE_MAX_IOUT 1000

#define MIDDLE_MOTOR_SPEED_MAX_OUT 8000
#define MIDDLE_MOTOR_SPEED_MAX_IOUT 2000
#define MIDDLE_MOTOR_ANGLE_MAX_OUT  3000
#define MIDDLE_MOTOR_ANGLE_MAX_IOUT 1000

#define LOAD_MOTOR_SPEED_MAX_OUT 16000
#define LOAD_MOTOR_SPEED_MAX_IOUT 3000
#define LOAD_MOTOR_ANGLE_MAX_OUT  3000
#define LOAD_MOTOR_ANGLE_MAX_IOUT 1000

#define PITCH_MOTOR_SPEED_MAX_OUT 10000
#define PITCH_MOTOR_SPEED_MAX_IOUT 4000
#define PITCH_MOTOR_ANGLE_MAX_OUT  3000
#define PITCH_MOTOR_ANGLE_MAX_IOUT 3000

#define YAW_MOTOR_SPEED_MAX_OUT 10000
#define YAW_MOTOR_SPEED_MAX_IOUT 4000
#define YAW_MOTOR_ANGLE_MAX_OUT  3000
#define YAW_MOTOR_ANGLE_MAX_IOUT 3000

#define CIRCLE_ANGLE                360.0f
#define ANGLE_ENCODER_MEASURE_MAX   32768.0f

float Bottom_motor_pid_speed[2][3]={LEFT_BOTTOM_MOTOR_SPEED_PID_KP,LEFT_BOTTOM_MOTOR_SPEED_PID_KI,LEFT_BOTTOM_MOTOR_SPEED_PID_KD,RIGHT_BOTTOM_MOTOR_SPEED_PID_KP,RIGHT_BOTTOM_MOTOR_SPEED_PID_KI,RIGHT_BOTTOM_MOTOR_SPEED_PID_KD};
float Bottom_motor_pid_angle[2][3]={LEFT_BOTTOM_MOTOR_ANGLE_PID_KP,LEFT_BOTTOM_MOTOR_ANGLE_PID_KI,LEFT_BOTTOM_MOTOR_ANGLE_PID_KD,RIGHT_BOTTOM_MOTOR_ANGLE_PID_KP,RIGHT_BOTTOM_MOTOR_ANGLE_PID_KI,RIGHT_BOTTOM_MOTOR_ANGLE_PID_KD};

float Middle_motor_pid_speed[3]={MIDDLE_MOTOR_SPEED_PID_KP,MIDDLE_MOTOR_SPEED_PID_KI,MIDDLE_MOTOR_SPEED_PID_KD};
float Middle_motor_pid_angle[3]={MIDDLE_MOTOR_ANGLE_PID_KP,MIDDLE_MOTOR_ANGLE_PID_KI,MIDDLE_MOTOR_ANGLE_PID_KD};

float Load_motor_pid_speed[3]={LOAD_MOTOR_SPEED_PID_KP,LOAD_MOTOR_SPEED_PID_KI,LOAD_MOTOR_SPEED_PID_KD};
float Load_motor_pid_angle[3]={LOAD_MOTOR_ANGLE_PID_KP,LOAD_MOTOR_ANGLE_PID_KI,LOAD_MOTOR_ANGLE_PID_KD};

float Yaw_motor_pid_speed[3]={YAW_MOTOR_SPEED_PID_KP,YAW_MOTOR_SPEED_PID_KI,YAW_MOTOR_SPEED_PID_KD};
float Yaw_motor_pid_angle[3]={YAW_MOTOR_ANGLE_PID_KP,YAW_MOTOR_ANGLE_PID_KI,YAW_MOTOR_ANGLE_PID_KD};

float Pitch_motor_pid_speed[3]={PITCH_MOTOR_SPEED_PID_KP,PITCH_MOTOR_SPEED_PID_KI,MIDDLE_MOTOR_SPEED_PID_KD};
float Pitch_motor_pid_angle[3]={PITCH_MOTOR_ANGLE_PID_KP,PITCH_MOTOR_ANGLE_PID_KI,MIDDLE_MOTOR_ANGLE_PID_KD};


// Can can1(hcan1);
// GM6020 Circle_load_motor(can1, 2);
// RingPID<PIDType::kPosition> Circle_load_motor_pid(10, 0, 0.1, 30000, 0, 8191);
// void Circle_load_control();

// M2006 Load_motor(can1, 5);
// PID<PIDType::kPosition> Load_motor_speed_pid(Load_motor_pid_speed[0], Load_motor_pid_speed[1], 
//                               Load_motor_pid_speed[2], LOAD_MOTOR_SPEED_MAX_OUT, LOAD_MOTOR_SPEED_MAX_IOUT);
// PID<PIDType::kPosition> Load_motor_angle_pid(Load_motor_pid_angle[0], Load_motor_pid_angle[1], 
//                               Load_motor_pid_angle[2], LOAD_MOTOR_ANGLE_MAX_OUT, LOAD_MOTOR_ANGLE_MAX_IOUT);